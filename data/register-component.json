{
  "id": "react-native-register-component",
  "name": "Register Component",
  "repository": {
    "type": "git",
    "url": "https://github.com/101digital/react-native-register-component.git"
  },
  "config": {
    "env": {
      "development": {
        "customerValidationBaseUrl": "https://api-ud-ow-dev.101digital.io/customer-validation-service/1.0.0",
        "userRegistrationBaseUrl": "https://api-ud-ow-dev.101digital.io/identity-service/1.1.10"
      },
      "staging": {
        "customerValidationBaseUrl": "https://api-ud-ow-dev.101digital.io/customer-validation-service/1.0.0",
        "userRegistrationBaseUrl": "https://api-ud-ow-dev.101digital.io/identity-service/1.1.10"
      },
      "production": {
        "customerValidationBaseUrl": "https://api-ud-ow-dev.101digital.io/customer-validation-service/1.0.0",
        "userRegistrationBaseUrl": "https://api-ud-ow-dev.101digital.io/identity-service/1.1.10"
      }
    }
  },
  "dependencies": [
    { "name": "https://github.com/101digital/react-native-theme-component.git" }
  ],
  "templates": [
    {
      "id": "register-template",
      "templateName": "Simple register template",
      "componentName": "InviteCodeQuestionScreen",
      "imports": [
        "import { InviteCodeQuestionScreen } from 'react-native-register-component';"
      ],
      "headers": [],
      "renders": [
        "      <InviteCodeQuestionScreen",
        "        onPress={(data) => {",
        "          if (data.withCode) {",
        "            $fn-invitation-code",
        "          } else {",
        "            $fn-join-list",
        "          }",
        "        }}",
        "        onPressBack={() => {",
        "          navigation.goBack();",
        "        }}",
        "      />"
      ],
      "functions": [
        {
          "id": "fn-invitation-code",
          "params": []
        },
        {
          "id": "fn-join-list",
          "params": []
        }
      ]
    },
    {
      "id": "register-invitation-template",
      "templateName": "Simple register invitation template",
      "componentName": "InviteCodeValidationScreen",
      "imports": [
        "import { InviteCodeValidationScreen } from 'react-native-register-component';"
      ],
      "headers": [],
      "renders": [
        "      <InviteCodeValidationScreen",
        "        onPress={() => {",
        "          $fn-register-screen //navigation.navigate(Route.USER_NAME_REGISTER_SCREEN, {});",
        "        }}",
        "        onPressBack={() => {",
        "          navigation.goBack();",
        "        }}",
        "      />"
      ],
      "functions": [
        {
          "id": "fn-register-screen",
          "params": []
        }
      ]
    },
    {
      "id": "user-register-template",
      "templateName": "user register template",
      "componentName": "UsernameCapturingScreen",
      "imports": [
        "import { UsernameCapturingScreen,UsernameCapturingComponentRef } from 'react-native-register-component';",
        "import { CountryPicker, ThemeContext } from 'react-native-theme-component';"
      ],
      "headers": [
        "const [showCountryPicker, setShowCountryPicker] = useState(false);",
        "const { deviceCountryCode } = useContext(ThemeContext);",
        "const usernameRefs = useRef<UsernameCapturingComponentRef>();",
        "",
        "useEffect(() => {",
        "    if (deviceCountryCode) {",
        "      usernameRefs?.current?.updateCountryCode(deviceCountryCode);",
        "    }",
        "  }, [deviceCountryCode]);"
      ],
      "renders": [
        "    <UsernameCapturingScreen",
        "      ref={usernameRefs}",
        "      Root={{",
        "        props: {",
        "          onPressBack: () => {",
        "            navigation.goBack();",
        "          },",
        "          onPress: () => {",
        "            //navigation.navigate(Route.REGISTER_OTP_SCREEN, {});",
        "          },",
        "        },",
        "        components: {",
        "          header: <View />,",
        "        },",
        "      }}",
        "      InputForm={{",
        "        component: {",
        "          usernameIcon: <View />,",
        "        },",
        "        style: {",
        "          userNameInputFieldStyle: {",
        "            contentContainerStyle: {",
        "              borderWidth: 1,",
        "              borderRadius: 5,",
        "              borderBottomWidth: 1,",
        "              backgroundColor: '#fff',",
        "            },",
        "            inputContainerStyle: {",
        "              height: 42,",
        "            },",
        "            textInputStyle: {",
        "              fontSize: 15,",
        "              color: '#000000',",
        "            },",
        "          },",
        "        },",
        "        props: {",
        "          onPressDialCode: () => {",
        "            setShowCountryPicker(true);",
        "          },",
        "          withDialCode: true,",
        "          withLabel: true,",
        "          inviteCode: route.params?.data,",
        "        },",
        "      }}",
        "    />",
        "    <CountryPicker",
        "      isVisible={showCountryPicker}",
        "      onClose={() => {",
        "        setShowCountryPicker(false);",
        "      }}",
        "      onSelectedCountry={(code) => {",
        "        setShowCountryPicker(false);",
        "        usernameRefs.current?.updateCountryCode(code);",
        "      }}",
        "    />",
        ""
      ],
      "functions": []
    },
    {
      "id": "set-register-password-template",
      "templateName": "Set register password template",
      "componentName": "PasswordVerification",
      "imports": [
        "import { PasswordVerification,PasswordVerificationRef,PasswordMask } from 'react-native-register-component';",
        "import { AuthContext } from 'react-native-auth-component';",
        "import { CustomerInvokeContext } from 'customer-invoke-component';"
      ],
      "headers": [
        "const passwordRefs = useRef<PasswordVerificationRef>();",
        "const [isVisiblePassword, setVisiblePassword] = useState(true);",
        "const [isConfirmVisiblePassword, setConfirmVisiblePassword] = useState(true);",
        "const { login } = useContext(AuthContext);",
        "const { setUserProfile } = useContext(CustomerInvokeContext);",
        "",
        "const loginUser = async (data: any) => {",
        "  const _profile = await login(data.phoneNumber, data.password);",
        "  if (_profile) {",
        "    setUserProfile({ ..._profile, country: data.country });",
        "    //navigation.navigate(Route.CUSTOMER_INVOKE_SCREEN, {",
        "    //  subStepNumber: 0,",
        "    //  mainStepNumber: 0,",
        "    //  applicationId: 0,",
        "    //});",
        "    // setLoginSuccess(false);",
        "  }",
        "};"
      ],
      "renders": [
        "      <PasswordVerification",
        "          ref={passwordRefs}",
        "          Root={{",
        "            props: {",
        "              onPressBack: () => {",
        "                navigation.goBack();",
        "              },",
        "              onPress: (data) => {",
        "                loginUser(data);",
        "              },",
        "            },",
        "            components: {",
        "              header: <View />,",
        "            },",
        "          }}",
        "          InputForm={{",
        "            component: {",
        "              passwordIcon: <View />,",
        "              usernameIcon: <View />,",
        "              suffixIcon: (",
        "                <PasswordMask",
        "                  isVisible={isVisiblePassword}",
        "                  onPress={() => setVisiblePassword(!isVisiblePassword)}",
        "                />",
        "              ),",
        "              confirmSuffixIcon: (",
        "                <PasswordMask",
        "                  isVisible={isConfirmVisiblePassword}",
        "                  onPress={() => setConfirmVisiblePassword(!isConfirmVisiblePassword)}",
        "                />",
        "              ),",
        "            },",
        "            style: {",
        "              passwordInputFieldStyle: {",
        "                contentContainerStyle: {",
        "                  backgroundColor: '#fff',",
        "                },",
        "              },",
        "              checkBoxInputFieldStyle: {",
        "                selectedBoxStyle: {",
        "                  width: 30,",
        "                  height: 20,",
        "                  borderRadius: 4,",
        "                  backgroundColor: '#14BDEB',",
        "                  alignItems: 'center',",
        "                  justifyContent: 'center',",
        "                },",
        "                unSelectedBoxStyle: {",
        "                  width: 20,",
        "                  height: 20,",
        "                  borderRadius: 4,",
        "                  borderWidth: 1,",
        "                  borderColor: '#14BDEB',",
        "                  alignItems: 'center',",
        "                  justifyContent: 'center',",
        "                },",
        "                titleStyle: {",
        "                  flex: 1,",
        "                  fontSize: 12,",
        "                  color: '#000000',",
        "                  marginLeft: 12,",
        "                  lineHeight: 21,",
        "                },",
        "                containerStyle: {",
        "                  flexDirection: 'row',",
        "                  alignItems: 'center',",
        "                  width: '85%',",
        "                },",
        "              },",
        "            },",
        "            props: {",
        "              onPressDialCode: () => {},",
        "              withDialCode: false,",
        "              withLabel: true,",
        "              isVisiblePassword: isVisiblePassword,",
        "              isConfirmVisiblePassword: isConfirmVisiblePassword,",
        "            },",
        "          }}",
        "        />"
      ],
      "functions": [
        {
          "id": "fn-register-screen",
          "params": []
        }
      ]
    }
  ],
  "texts": {
    "login_component": {
      "lbl_sign_in": "Sign In",
      "lbl_email": "Email",
      "lbl_mobile_number": "Mobile number",
      "lbl_password": "Password",
      "btn_forgot_password": "Forgot password",
      "btn_login": "LOGIN",
      "btn_sign_up": "Sign up here",
      "lbl_not_an_account": "Not a user yet?"
    },
    "change_password": {
      "lbl_change_password": "Change Password",
      "lbl_sub_title": "Enter details below.",
      "lbl_current_password": "Current Password",
      "lbl_new_password": "New Password",
      "lbl_confirm_password": "Confirm New Password",
      "msg_rule_1": "Must be at least 8 characters",
      "msg_rule_2": "Must contain at least 1 number",
      "msg_rule_3": "Must contain at least 1 upper case",
      "msg_rule_4": "Must contain at least 1 special character",
      "plh_current_password": "Enter current password",
      "plh_new_password": "Enter new password",
      "plh_confirm_password": "Re-enter new password",
      "val_enter_valid_password": "Password does not match",
      "lbl_error_title": "Oops!",
      "lbl_error_message": "The current password you entered is invalid. Please try again.",
      "lbl_success_title": "Success!",
      "msg_success": "Success!",
      "btn_success_next": "Proceed to dashboard"
    },
    "user_registration": {
      "user_name_header": "What is your mobile number?",
      "val_enter_mobile_number": "Please enter your mobile number",
      "val_enter_valid_mobile_number": "Please enter a valid mobile number",
      "user_name_description": "We will use your mobile number as your username and to confirm your device."
    },
    "otp_verification": {
      "title": "Verify your mobile number",
      "description": "We have sent you a One-Time Password (OTP) to the number *******"
    },
    "password_verification": {
      "title": "Let's secure your account",
      "description": "Nominate your password below.",
      "lbl_password": "Password",
      "lbl_confirm_password": "Confirm Password",
      "val_enter_valid_password": "Password does not match"
    }
  }
}
